name: CI – Streamlit + SecretManager

# main 브랜치에 푸시될 때마다, 또는 PR 생성/업데이트 때마다 동작
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    # 환경 변수로 서비스 계정 키(JSON)를 주입
    env:
      GCP_SA_KEY_JSON: ${{ secrets.GCP_SA_KEY_JSON }}
      # 만약 GSHEET_KEY 등을 env로 쓰시면 여기도 추가

    steps:
      # 1) 소스코드 checkout
      - name: Checkout code
        uses: actions/checkout@v3

      # 2) 파이썬 셋업
      - name: Setup Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      # 3) 의존성 설치
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4) (옵션) 간단한 유닛 테스트나 lint 검사
      - name: Run lint & tests
        run: |
          # 예: flake8, pytest 등이 있다면 여기에
          # flake8 .
          # pytest --maxfail=1 --disable-warnings -q
          echo "No tests defined"

      # 5) Streamlit 앱 실행 확인 (CI 상에서 1회 스냅샷만)
      - name: Smoke Test – Streamlit run
        run: |
          # 백그라운드로 실행
          nohup streamlit run main.py --server.port 8501 --server.headless true &
          sleep 10
          # HTTP 상태코드 확인 (localhost:8501 이 열렸는지)
          curl --fail http://localhost:8501 || (cat nohup.out && exit 1)

      # 6) (선택) 배포 단계 – Cloud Run 등
      #   - 이미 Container 빌드&배포 스크립트를 따로 쓰신다면 여기에 추가
      # - name: Deploy to Cloud Run
      #   run: |
      #     gcloud auth activate-service-account --key-file <(echo "$GCP_SA_KEY_JSON")
      #     gcloud run deploy ...
